use.memoise = FALSE)
Quandl.api_key
### Parte dos indices ###
Quandl.api_key('bjYYiH17NsT4PGCNr8G9')
#### Instalando os Pacotes ####
# install.packages(c('tidyverse', 'TTR'))
# install.packages(c("Quandl", "dygraphs", "magrittr", "PerformanceAnalytics", "quantmod"))
#### Abrindo os pacotes ####
library("AER")
library("Quandl")
library('TTR')
library('quantmod')
library('tidyverse')
library("zoo")
ipca <- Quandl('BCB/11', collapse = "daily", start_date = "1996-01-01")
ipca
selic <- Quandl('BCB/11', collapse = "daily", start_date = "1996-01-01")
selic <- Quandl('BCB/11', collapse = "daily", start_date = "2015-01-01")
selic(head)
selic <- Quandl('BCB/11', collapse = "daily", start_date = "2015-01-01")
head(selic)
tail(selic)
head(selic)
selic <- zoo(selic, order.by = Date)
selic <- zoo(selic, order.by = selic["Date"])
selic
selic <- zoo(selic$Value, order.by = selic$Date)
selic
selic <- Quandl('BCB/11', collapse = "daily", start_date = "2021-09-19")
selic <- zoo(selic$Value, order.by = selic$Date)
sum(selic)
selic <- Quandl('BCB/11', collapse = "daily", start_date = "2015-01-01")
selic <- zoo(selic$Value, order.by = selic$Date)
plot(retorno_papes,selic)
plot(retorno_papes,log(selic))
plot(retorno_papes,exp(selic))
plot(retorno_papes,selic^1/2)
plot(retorno_papes,selic^1/4)
plot(retorno_papes,selic^1/3)
plot(retorno_papes,selic^1/256)
plot(retorno_papes,selic^3/4)
plot(retorno_papes,Delt(selic))
selic <- Quandl('BCB/11', collapse = "montly", start_date = "2015-01-01")
selic <- Quandl('BCB/11', collapse = "monthly", start_date = "2015-01-01")
selic <- zoo(selic$Value, order.by = selic$Date)
selic
seq <- 1:10
summary(seq)
set.seed(123)
rentabilidade = rnorm(100, mean = 5, sd = 1)
rentabilidade = rnorm(100, mean = 5, sd = 1)
rentabilidade
set.seed(123)
rentabilidade <- rnorm(100, mean = 5, sd = 1)
rentabilidade
set.seed(123)
rentabilidade <- rnorm(100, mean = 5, sd = 1)
rentabilidade
for (taxa in rentabilidade){
if (taxa < 5){
print(paste(taxa,"abaixo da media"))
} else if (taxa > 5){
print(paste(taxa,"acima da media"))
}
else{
print(paste(taxa,"na media"))
}
}
# Questão 2
vetor <- 1:10
vetor
# Questão 2
vetor <- 1:10
for (numero in vetor){
if (numero %% 2 == 0){
print(paste(taxa,"par"))
} else {
print(paste(taxa,"impar"))
}
}
# Questão 2
vetor <- 1:10
for (numero in vetor){
if (numero %% 2 == 0){
print(paste(numero,"par"))
} else {
print(paste(numero,"impar"))
}
}
teste <- 50:1
teste
prod(teset)
prod(teste)
teste <- 4:1
prod(teste)
teste <- 7:1
prod(teste)
teste <- 12:1
prod(teste)
fatorial <- function(x){
fatorial <- function(x){
}
fatorial <- function(x){
fatorial <- function(x){
if (x == 0 & x == 1){
return(1)
} else if (x > 0{
fatorial <- function(x){
if (x == 0 & x == 1){
return(1)
} else if (x > 0{
fatorial <- function(x){
if (x == 0 & x == 1){
return(1)
} else if (x > 0){
teste <- x:1
return(prod(teste))
} else {
return("Não tem fatorial de numero negativo")
}
}
factorial(4)
factorial(1)
factorial(0)
factorial(0)
factorial(-1)
fatorial <- function(x){
if (x == 0 & x == 1){
return(1)
} else if (x > 0){
teste <- x:1
return(prod(teste))
} else {
return("Não tem fatorial de numero negativo")
}
}
factorial(-1)
-1:1
prod(-1:1)
fatorial <- function(x){
if (x == 0 & x == 1){
return(1)
} else if (x > 0){
teste <- x:1
return(prod(teste))
} else {
paste('a')
return("Não tem fatorial de numero negativo")
}
}
fatorial <- function(x){
if (x == 0 & x == 1){
return(1)
} else if (x > 0){
teste <- x:1
return(prod(teste))
} else {
print('a')
return("Não tem fatorial de numero negativo")
}
}
factorial
factorial(-1)
fatorial <- function(x){
if (x == 0 & x == 1){
return(1)
} else if (x > 0){
print('a')
teste <- x:1
return(prod(teste))
} else {
return("Não tem fatorial de numero negativo")
}
}
factorial(-1)
fatorial <- function(x){
if (x == 0 & x == 1){
return(1)
} else if (x > 0){
print('a')
teste <- x:1
return(prod(teste))
} else {
return("Não tem fatorial de numero negativo")
}
}
factorial(-1)
factorial(1)
factorial(4)
fatorial <- function(x){
if (x == 0 & x == 1){
return(1)
} else if (x > 0){
print('a')
teste <- x:1
return(prod(teste))
} else {
return("Não tem fatorial de numero negativo")
}
}
factorial(4)
(4)
factorial(4)
factorial(4.5)
4.5%%1
fatorial <- function(x){
if (x%%1 == 0){
if (x == 0 & x == 1){
return(1)
} else if (x > 0){
teste <- x:1
return(prod(teste))
} else {
return("Não tem fatorial de numero negativo")
}
} else {
return("Não tem fatorial de numero decimal")
}
}
factorial(4.5)
fatorial <- function(x){
if (x%%1 == 0){
if (x == 0 & x == 1){
return(1)
} else if (x > 0){
teste <- x:1
return(prod(teste))
} else {
return("Não tem fatorial de numero negativo")
}
} else {
return("Não tem fatorial de numero decimal")
}
}
fatorial(4.5)
fatorial(-2)
fatorial(5)
fatorial <- function(x){
if (x%%1 == 0){
if (x == 0 & x == 1){
return(1)
} else if (x > 0){
teste <- x:1
return(prod(teste))
} else {
return("Não tem fatorial de numero negativo")
}
} else {
return("Não tem fatorial de numero decimal")
}
}
fatorial(5)
fatorial(-5)
fatorial(4.5)
fatorial(-4.5)
library(tidyverse)
set.seed(1234)
df <- tibble(a = sample(1:10000, 10000),
b = rnorm(10000, 0, 1),
c = rexp(10000),
d = runif(10000, min=0, max=10))
df
sd(df[,'a'])
df[,'a']
sdt(df[,'a'])
sd(df[,'a'])
sd(c(1,2,3,4))
sdt(c(1,2,3,4))
sd(c(1,2,3,4))
vetor <- df[,'a']
sum(vetor)/dim(vetor)
sum(vetor)
dim(vetor)
dim(vetor)
dim(vetor)[1]
sum(vetor)/dim(vetor)[1]
df[,'a']
df[,'a'] - 5000.5
vetor <- df[,'a']
media(vetor)
media <- function(vetor){
return(sum(vetor)/dim(vetor)[1])
}
media(vetor)
med <- media(vetor)
somatorio <- (vetor - med)^2
somatorio
variancia <- somatorio / (dim(vetor)[1])
variancia
somatorio
variancia <- somatorio %/% (dim(vetor)[1])
somatorio %/% (dim(vetor)[1])
variancia <- sum(somatorio) / (dim(vetor)[1])
variancia
vetor <- df[,'a']
med <- media(vetor)
med
somatorio <- sum((vetor - med)^2)
somatorio
variancia <- somatorio / (dim(vetor)[1])
variancia
dvs <- variancia^0.5
dvs
return(dvs)
media <- function(vetor){
return(sum(vetor)/dim(vetor)[1])
}
desvio_padrao <- function(vetor){
med <- media(vetor)
somatorio <- (vetor - med)^2
variancia <- somatorio / (dim(vetor)[1])
dvs <- variancia^0.5
return(dvs)
}
vetor <- df[,'a']
desvio_padrao(vetor)
desvio_padrao <- function(vetor){
med <- media(vetor)
somatorio <- (vetor - med)^2
variancia <- somatorio / (dim(vetor)[1])
dvs <- variancia^0.5
return(dvs)
}
vetor <- df[,'a']
desvio_padrao(vetor)
desvio_padrao <- function(vetor){
med <- media(vetor)
somatorio <- sum((vetor - med)^2)
variancia <- somatorio / (dim(vetor)[1])
dvs <- variancia^0.5
return(dvs)
}
vetor <- df[,'a']
desvio_padrao(vetor)
media(vetor)
summary(vetor)
sd(vetor)
vetor
sd(as.vector(vetor))
as.vector(vetor)
sd(as.vector(vetor))
sd(as.factor(vetor))
sd(vetor)
x <- c(34,56,87,65,34,56,89)
sd(x)
df
df <- data.frame(a = sample(1:10000, 10000),
b = rnorm(10000, 0, 1),
c = rexp(10000),
d = runif(10000, min=0, max=10))
df
media <- function(vetor){
return(sum(vetor)/dim(vetor)[1])
}
desvio_padrao <- function(vetor){
med <- media(vetor)
somatorio <- sum((vetor - med)^2)
variancia <- somatorio / (dim(vetor)[1])
dvs <- variancia^0.5
return(dvs)
}
vetor <- df[,'a']
desvio_padrao(vetor)
media(vetor)
summary(vetor)
media <- function(vetor){
return(sum(vetor)/dim(vetor))
}
desvio_padrao <- function(vetor){
med <- media(vetor)
somatorio <- sum((vetor - med)^2)
variancia <- somatorio / (dim(vetor))
dvs <- variancia^0.5
return(dvs)
}
vetor <- df[,'a']
desvio_padrao(vetor)
media(vetor)
summary(vetor)
sd(vetor)
vetor
vetor <- df[,'a']
set.seed(1234)
df <- tibble(a = sample(1:10000, 10000),
b = rnorm(10000, 0, 1),
c = rexp(10000),
d = runif(10000, min=0, max=10))
media <- function(vetor){
return(sum(vetor)/dim(vetor)[1])
}
desvio_padrao <- function(vetor){
med <- media(vetor)
somatorio <- sum((vetor - med)^2)
variancia <- somatorio / (dim(vetor)[1])
dvs <- variancia^0.5
return(dvs)
}
vetor <- df[,'a']
desvio_padrao(vetor)
media(vetor)
summary(vetor)
sd(vetor)
vetor <- df$a
desvio_padrao(vetor)
vetor
vetor <- df$a
desvio_padrao(vetor)
media(vetor)
summary(vetor)
vetor <- df$a
df
df <- tibble(a = sample(1:10000, 10000),
b = rnorm(10000, 0, 1),
c = rexp(10000),
d = runif(10000, min=0, max=10))
media <- function(vetor){
return(sum(vetor)/dim(vetor)[1])
}
desvio_padrao <- function(vetor){
med <- media(vetor)
somatorio <- sum((vetor - med)^2)
variancia <- somatorio / (dim(vetor)[1])
dvs <- variancia^0.5
return(dvs)
}
vetor <- df$a
media <- function(vetor){
return(sum(vetor)/dim(vetor))
}
media(vetor)
sum(vetor)
dim(vetor)
sum(vetor)/length(vetor)
media <- function(vetor){
return(sum(vetor)/dim(vetor))
}
media <- function(vetor){
return(sum(vetor)/length(vetor))
}
desvio_padrao <- function(vetor){
med <- media(vetor)
somatorio <- sum((vetor - med)^2)
variancia <- somatorio / (length(vetor))
dvs <- variancia^0.5
return(dvs)
}
vetor <- df$a
desvio_padrao(vetor)
media(vetor)
media(vetor)
summary(vetor)
sd(vetor)
desvio_padrao(vetor)
extremos <- c()
colunas <- c("a","b","c","d")
which.max(vetor)
which.min(vetor)
df[7284,'a']
df[591,'a']
df[,'a']
as.vector(df[,'a'])
coluna <- 'a'
df[,coluna]
as.vector(df[,coluna])
extremos <- c()
colunas <- c("a","b","c","d")
for (coluna in colunas){
analisado <- as.vector(df[,coluna])
extremos <- c(extremos,which.max(analisado), which.min(analisado))
}
analisado
which.max(analisado)
analisado <- as.double(as.vector(df[,coluna]))
as.vector(df[,coluna])
analisado
class(analisado)
class(analisado[1])
analisado[1]
class(analisado[,1])
class(analisado[2])
)
analisado[2]
class(analisado[1,1])
as.vector(df[,coluna])
analisado
as.vector(analisado)
class(as.vector(analisado))
as.vector(unlist(df[,coluna]))
analisado <- as.vector(unlist(df[,coluna]))
class(analisado)
analisado
analisado <- as.vector(unlist(df[,coluna]))
extremos <- c(extremos,which.max(analisado), which.min(analisado))
extremos <- c()
colunas <- c("a","b","c","d")
for (coluna in colunas){
analisado <- as.vector(unlist(df[,coluna]))
extremos <- c(extremos,which.max(analisado), which.min(analisado))
}
extremos
df[-extremos,]
extremos
df <- df[-extremos,]
df
(1:100)
-(1:100)
df <- df[-(1:100)]
df <- df[-(1:100),]
df
colunas <- c("a","b","c","d")
,
apply(df,2,media)
